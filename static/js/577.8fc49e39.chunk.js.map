{"version":3,"file":"static/js/577.8fc49e39.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/button/Button.module.css?8a78","components/button/Button.jsx","js/apireset/axios-data.js","js/config/apikey.js","js/config/stdquery.js","webpack://goit-react-hw-05-movies/./src/pages/movies/Movies.module.css?c186","pages/movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__-L8VN\"};","import PropTypes from 'prop-types';\nimport css from './Button.module.css';\n\nexport const Button = ({ label, action, formButton = false, id }) => {\n  return formButton === true ? (\n    <button className={css.btn} type=\"submit\" onClick={action}>\n      {label}\n    </button>\n  ) : (\n    <button className={css.btn} type=\"button\" onClick={action} data-id={id}>\n      {label}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  label: PropTypes.string,\n  action: PropTypes.func,\n  formButton: PropTypes.bool,\n  id: PropTypes.string,\n};\n","// import axios, { isCancel, AxiosError } from 'axios';\nimport axios from 'axios';\nexport async function axiosData(header, parameters) {\n  try {\n    const response = await axios(\n      {\n        ...header,\n        params: {\n          ...parameters,\n        },\n      },\n      { signal: AbortSignal.timeout(5000) }\n    );\n    return response;\n  } catch (error) {\n    return error;\n  }\n}\n","export const apikeyTMDB = '201a0d25c5ee0bd75c195a2bbfd9dec7';\n","export const headerDefaultGet = {\n  method: 'get',\n  accept: 'application/json',\n};\n\nexport const headerGenres = {\n  baseURL: 'https://api.themoviedb.org/3/genre/movie/list/',\n};\n\nexport const paramsGenres = {\n  language: 'en',\n};\n\nexport const headerTrailer = {\n  baseURL: 'https://api.themoviedb.org/3/movie',\n  url: '',\n};\n\nexport const paramsTrailer = {\n  language: 'en-US',\n};\n\nexport const headerTrendingMovies = {\n  baseURL: 'https://api.themoviedb.org/3/trending/movie/day',\n};\nexport const paramsTrendingMovies = {\n  language: 'en-US',\n};\n\nexport const headerSearchMovie = {\n  baseURL: 'https://api.themoviedb.org/3/search/movie',\n};\nexport const paramsSearchMovie = {\n  language: 'en-US',\n  include_adult: false,\n};\n\nexport const headerSearchMovieDetails = {\n  baseURL: 'https://api.themoviedb.org/3/movie',\n  url: '',\n};\n\nexport const paramsSearchMovieDetails = {\n  language: 'en-US',\n};\n\nexport const headerSearchMovieCredits = {\n  baseURL: 'https://api.themoviedb.org/3/movie/',\n  url: '',\n};\n\nexport const paramsSearchMovieCredits = {\n  language: 'en-US',\n};\nexport const headerSearchMovieReviews = {\n  baseURL: 'https://api.themoviedb.org/3/movie/',\n  url: '',\n};\n\nexport const paramsSearchMovieReviews = {\n  language: 'en-US',\n  page: 1,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movielinks\":\"Movies_movielinks__O57s9\",\"movieform\":\"Movies_movieform__ZHwBY\",\"movienameinput\":\"Movies_movienameinput__VVj-M\"};","import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport { Button } from 'components/button/Button';\nimport {\n  headerDefaultGet,\n  headerSearchMovie,\n  paramsSearchMovie,\n} from 'js/config/stdquery';\nimport { apikeyTMDB } from 'js/config/apikey';\nimport { axiosData } from 'js/apireset/axios-data';\nimport css from './Movies.module.css';\nimport { useLoad } from 'components/loadcontext/LoadContext';\n\nconst MoviesList = ({ title, id }) => {\n  const location = useLocation();\n  return (\n    <li className={css.movielinks}>\n      <Link to={`${id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nconst Movies = () => {\n  const [data, setData] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { isLoadingOn, isLoadingOff } = useLoad();\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (query === null) {\n      return;\n    } else {\n      const getMovies = async () => {\n        isLoadingOn();\n        const response = await getDataFromServer(query);\n        setData([...response.data.results]);\n        isLoadingOff();\n      };\n      getMovies();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSearch = async event => {\n    event.preventDefault();\n    const searchPchrase = event.target.form.searchinput.value;\n    isLoadingOn();\n    const response = await getDataFromServer(searchPchrase);\n    if (response) {\n      setSearchParams({ query: searchPchrase });\n      setData([...response.data.results]);\n    }\n    isLoadingOff();\n  };\n\n  return (\n    <main>\n      <form\n        className={css.movieform}\n        name=\"searchform\"\n        autoComplete=\"off\"\n        method=\"POST\"\n        validate=\"false\"\n      >\n        <input className={css.movienameinput} type=\"text\" name=\"searchinput\" />\n        <Button label=\"Search\" formButton={true} action={handleSearch} />\n      </form>\n      <ul>\n        {data.length > 0 &&\n          data.map(element => (\n            <MoviesList\n              key={element.id}\n              title={element.title}\n              id={element.id}\n            />\n          ))}\n      </ul>\n    </main>\n  );\n};\n\nasync function getDataFromServer(searchPchrase) {\n  const header = { ...headerDefaultGet, ...headerSearchMovie };\n  const parameters = {\n    ...paramsSearchMovie,\n    api_key: apikeyTMDB,\n    query: searchPchrase,\n    page: 1,\n  };\n  try {\n    const response = await axiosData(header, parameters);\n    if (response.code === 'ERR_NETWORK') {\n      Notiflix.Notify.failure(`${response.message}`);\n    } else if (response.code === 'ERR_BAD_REQUEST') {\n      Notiflix.Notify.failure(`${response.response.data.status_message}`);\n    } else {\n      return response;\n    }\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n    return error;\n  }\n}\n\nMoviesList.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.number,\n};\n\nexport default Movies;\n"],"names":["Button","label","action","formButton","id","className","css","type","onClick","axiosData","header","parameters","axios","params","signal","AbortSignal","timeout","response","apikeyTMDB","headerDefaultGet","method","accept","headerTrendingMovies","baseURL","paramsTrendingMovies","language","headerSearchMovie","paramsSearchMovie","include_adult","headerSearchMovieDetails","url","paramsSearchMovieDetails","headerSearchMovieCredits","paramsSearchMovieCredits","headerSearchMovieReviews","paramsSearchMovieReviews","page","MoviesList","title","location","useLocation","to","state","from","getDataFromServer","searchPchrase","api_key","query","code","Notiflix","message","data","status_message","useState","setData","useSearchParams","searchParams","setSearchParams","useLoad","isLoadingOn","isLoadingOff","useEffect","get","getMovies","results","handleSearch","event","preventDefault","target","form","searchinput","value","name","autoComplete","validate","length","map","element"],"sourceRoot":""}