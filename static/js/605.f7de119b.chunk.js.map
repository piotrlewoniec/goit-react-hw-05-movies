{"version":3,"file":"static/js/605.f7de119b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/button/Button.module.css?8a78","components/button/Button.jsx","js/apireset/axios-data.js","js/config/apikey.js","js/config/stdquery.js","pages/moviedetails/MovieDetails.jsx","webpack://goit-react-hw-05-movies/./src/pages/moviedetails/MovieDetails.module.css?2636"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__-L8VN\"};","import PropTypes from 'prop-types';\nimport css from './Button.module.css';\n\nexport const Button = ({ label, action, formButton = false, id }) => {\n  return formButton === true ? (\n    <button className={css.btn} type=\"submit\" onClick={action}>\n      {label}\n    </button>\n  ) : (\n    <button className={css.btn} type=\"button\" onClick={action} data-id={id}>\n      {label}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  label: PropTypes.string,\n  action: PropTypes.func,\n  formButton: PropTypes.bool,\n  id: PropTypes.string,\n};\n","// import axios, { isCancel, AxiosError } from 'axios';\nimport axios from 'axios';\nexport async function axiosData(header, parameters) {\n  try {\n    const response = await axios(\n      {\n        ...header,\n        params: {\n          ...parameters,\n        },\n      },\n      { signal: AbortSignal.timeout(5000) }\n    );\n    return response;\n  } catch (error) {\n    return error;\n  }\n}\n","export const apikeyTMDB = '201a0d25c5ee0bd75c195a2bbfd9dec7';\n","export const headerDefaultGet = {\n  method: 'get',\n  accept: 'application/json',\n};\n\nexport const headerGenres = {\n  baseURL: 'https://api.themoviedb.org/3/genre/movie/list/',\n};\n\nexport const paramsGenres = {\n  language: 'en',\n};\n\nexport const headerTrailer = {\n  baseURL: 'https://api.themoviedb.org/3/movie',\n  url: '',\n};\n\nexport const paramsTrailer = {\n  language: 'en-US',\n};\n\nexport const headerTrendingMovies = {\n  baseURL: 'https://api.themoviedb.org/3/trending/movie/day',\n};\nexport const paramsTrendingMovies = {\n  language: 'en-US',\n};\n\nexport const headerSearchMovie = {\n  baseURL: 'https://api.themoviedb.org/3/search/movie',\n};\nexport const paramsSearchMovie = {\n  language: 'en-US',\n  include_adult: false,\n};\n\nexport const headerSearchMovieDetails = {\n  baseURL: 'https://api.themoviedb.org/3/movie',\n  url: '',\n};\n\nexport const paramsSearchMovieDetails = {\n  language: 'en-US',\n};\n\nexport const headerSearchMovieCredits = {\n  baseURL: 'https://api.themoviedb.org/3/movie/',\n  url: '',\n};\n\nexport const paramsSearchMovieCredits = {\n  language: 'en-US',\n};\nexport const headerSearchMovieReviews = {\n  baseURL: 'https://api.themoviedb.org/3/movie/',\n  url: '',\n};\n\nexport const paramsSearchMovieReviews = {\n  language: 'en-US',\n  page: 1,\n};\n","import {\n  Link,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'components/button/Button';\nimport {\n  headerDefaultGet,\n  headerSearchMovieDetails,\n  paramsSearchMovieDetails,\n} from 'js/config/stdquery';\nimport { apikeyTMDB } from 'js/config/apikey';\nimport { axiosData } from 'js/apireset/axios-data';\nimport Notiflix from 'notiflix';\nimport css from './MovieDetails.module.css';\nimport { useLoad } from 'components/loadcontext/LoadContext';\n\nconst MovieDeatailsInfo = ({ data }) => {\n  const genres = data.genres.map(element => element.name).join(', ');\n  const date = new Date(data.release_date).getFullYear();\n  return (\n    <div className={css.moviewrapper}>\n      <div>\n        <img\n          className={css.movieposter}\n          src={`https://image.tmdb.org/t/p/original${data.poster_path}`}\n          alt={data.title}\n        ></img>\n      </div>\n      <ul className={css.moviedatawrapper}>\n        <li className={css.movietitle}>\n          {data.title} ({date})\n        </li>\n        <li>\n          <span className={css.moviedatalabel}>User Score: </span>\n          <span>{Math.trunc(data.vote_average * 10)}%</span>\n        </li>\n        <li className={css.movieoverview}>\n          <span className={css.moviedatalabel}>Overview</span>\n          <span>{data.overview}</span>\n        </li>\n        <li className={css.movieoverview}>\n          <span className={css.moviedatalabel}>Genres</span>\n          <span>{genres}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nlet locationStored;\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [data, setData] = useState({});\n  const [isData, setIsData] = useState(false);\n  const { isLoadingOn, isLoadingOff } = useLoad();\n\n  useEffect(() => {\n    locationStored = location;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      isLoadingOn();\n      const response = await getDataFromServer(movieId);\n      if (response) {\n        setData(response.data);\n        setIsData(true);\n      }\n      isLoadingOff();\n    };\n    getMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    if (location.state === null) {\n      navigate('/', { replace: false });\n      return;\n    }\n    if (\n      location.state.from.pathname === '/movies' &&\n      location.state.from.search === ''\n    ) {\n      navigate('/movies', { replace: false });\n    } else if (\n      location.state.from.state !== null &&\n      location.state.from.state.from.pathname === '/movies' &&\n      location.state.from.state.from.search !== ''\n    ) {\n      navigate('/movies' + location.state.from.state.from.search, {\n        replace: false,\n      });\n    } else if (\n      location.state.from.pathname === '/movies' &&\n      location.state.from.search !== ''\n    ) {\n      navigate('/movies' + location.state.from.search, { replace: false });\n    } else {\n      navigate('/', { replace: false });\n    }\n  };\n\n  return (\n    <main>\n      <section className={css.moviedetalsec}>\n        <Button label=\"Go back\" action={handleGoBack} />\n        {isData && <MovieDeatailsInfo data={data} />}\n      </section>\n      <section className={css.addinfo}>\n        Additional information\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: locationStored }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: locationStored }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </section>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nasync function getDataFromServer(movieId) {\n  const header = { ...headerDefaultGet, ...headerSearchMovieDetails };\n  header.url = `${movieId}`;\n  const parameters = { ...paramsSearchMovieDetails, api_key: apikeyTMDB };\n  try {\n    const response = await axiosData(header, parameters);\n    if (response.code === 'ERR_NETWORK') {\n      Notiflix.Notify.failure(`${response.message}`);\n    } else if (response.code === 'ERR_BAD_REQUEST') {\n      Notiflix.Notify.failure(`${response.response.data.status_message}`);\n    } else {\n      return response;\n    }\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n    return error;\n  }\n}\n\nMovieDeatailsInfo.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviedetalsec\":\"MovieDetails_moviedetalsec__XVv8g\",\"addinfo\":\"MovieDetails_addinfo__7CsIk\",\"moviewrapper\":\"MovieDetails_moviewrapper__+IZiy\",\"movieposter\":\"MovieDetails_movieposter__TpeeU\",\"moviedatawrapper\":\"MovieDetails_moviedatawrapper__iOf2G\",\"movietitle\":\"MovieDetails_movietitle__EdLDd\",\"movieoverview\":\"MovieDetails_movieoverview__7Rt2v\",\"moviedatalabel\":\"MovieDetails_moviedatalabel__s58lm\"};"],"names":["Button","label","action","formButton","id","className","css","type","onClick","axiosData","header","parameters","axios","params","signal","AbortSignal","timeout","response","apikeyTMDB","headerDefaultGet","method","accept","headerTrendingMovies","baseURL","paramsTrendingMovies","language","headerSearchMovie","paramsSearchMovie","include_adult","headerSearchMovieDetails","url","paramsSearchMovieDetails","headerSearchMovieCredits","paramsSearchMovieCredits","headerSearchMovieReviews","paramsSearchMovieReviews","page","locationStored","MovieDeatailsInfo","data","genres","map","element","name","join","date","Date","release_date","getFullYear","src","poster_path","alt","title","Math","trunc","vote_average","overview","getDataFromServer","movieId","api_key","code","Notiflix","message","status_message","useParams","navigate","useNavigate","location","useLocation","useState","setData","isData","setIsData","useLoad","isLoadingOn","isLoadingOff","useEffect","getMovies","state","from","pathname","search","replace","to","Suspense","fallback"],"sourceRoot":""}