{"version":3,"file":"static/js/183.43f4ee52.chunk.js","mappings":"4SACA,EAA2B,uB,kBCarBA,EAAW,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACtC,OACE,2BACE,gBACEC,UAAWC,EACXC,IAAG,6CAAwCL,GAC3CM,IAAKL,KAEP,uBAAIA,KACJ,yBAAG,cAAYC,OAGpB,EAED,SAoCeK,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,kFACQC,GADR,kBACsBC,EAAAA,IAAqBC,EAAAA,KAClCC,IAAP,UAAgBJ,EAAhB,YACMK,GAHR,kBAIOC,EAAAA,IAJP,IAKIC,QAASC,EAAAA,IALb,mBAQ2BC,EAAAA,EAAAA,GAAUR,EAAQI,GAR7C,UAS0B,iBADhBK,EARV,QASiBC,KATjB,iBAUMC,IAAAA,OAAAA,QAAA,UAA2BF,EAASG,UAV1C,2BAWiC,oBAAlBH,EAASC,KAXxB,iBAYMC,IAAAA,OAAAA,QAAA,UAA2BF,EAASA,SAASI,KAAKC,iBAZxD,iDAcaL,GAdb,iEAiBIE,IAAAA,OAAAA,QAAA,iBAjBJ,yGA4BA,MAhEa,WACX,IAAQZ,GAAYgB,EAAAA,EAAAA,MAAZhB,QACR,GAAwBiB,EAAAA,EAAAA,UAAS,IAAjC,eAAOH,EAAP,KAAaI,EAAb,KACA,GAAsCC,EAAAA,EAAAA,KAA9BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,aAerB,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBH,IADgB,SAEOrB,EAAkBC,GAFzB,QAEVU,EAFU,SAIdQ,GAAQ,OAAIR,EAASI,KAAKU,OAE5BH,IANgB,2CAAH,qDAQfE,GAED,GAAE,KAGD,wBACGT,EAAKW,OAAS,EACbX,EAAKY,KAAI,SAACC,EAASC,GAAV,OACP,SAACrC,EAAD,CAEEC,aAAcmC,EAAQnC,aACtBC,KAAMkC,EAAQlC,KACdC,UAAWiC,EAAQjC,WAHd,MAAQkC,EAFR,KAST,uBAAG,cAIV,C,uGC5DM,SAAenB,EAAtB,iDAAO,OAAP,oBAAO,WAAyBR,EAAQI,GAAjC,iGAEoBwB,EAAAA,EAAAA,IAAM,kBAEtB5B,GAFqB,IAGxB6B,QAAO,UACFzB,KAGP,CAAE0B,OAAQC,YAAYC,QAAQ,OAT7B,cAEGvB,EAFH,yBAWIA,GAXJ,+I,sDCFA,IAAMF,EAAa,kC,uSCAnB,IAAMN,EAAmB,CAC9BgC,OAAQ,MACRC,OAAQ,oBAoBGC,EAAuB,CAClCC,QAAS,mDAEEC,EAAuB,CAClCC,SAAU,SAGCC,EAAoB,CAC/BH,QAAS,6CAEEI,EAAoB,CAC/BF,SAAU,QACVG,eAAe,GAGJC,EAA2B,CACtCN,QAAS,qCACTjC,IAAK,IAGMwC,EAA2B,CACtCL,SAAU,SAGCpC,EAA2B,CACtCkC,QAAS,sCACTjC,IAAK,IAGME,EAA2B,CACtCiC,SAAU,SAECM,EAA2B,CACtCR,QAAS,sCACTjC,IAAK,IAGM0C,EAA2B,CACtCP,SAAU,QACVQ,KAAM,E","sources":["webpack://goit-react-hw-05-movies/./src/components/cast/Cast.module.css?6cbd","components/cast/Cast.jsx","js/apireset/axios-data.js","js/config/apikey.js","js/config/stdquery.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast_img\":\"Cast_cast_img__rkXpF\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport {\n  headerDefaultGet,\n  headerSearchMovieCredits,\n  paramsSearchMovieCredits,\n} from 'js/config/stdquery';\nimport { apikeyTMDB } from 'js/config/apikey';\nimport { axiosData } from 'js/apireset/axios-data';\nimport Notiflix from 'notiflix';\nimport css from './Cast.module.css';\nimport PropTypes from 'prop-types';\nimport { useLoad } from '../loadcontext/LoadContext';\n\nconst CastItem = ({ profile_path, name, character }) => {\n  return (\n    <li>\n      <img\n        className={css.cast_img}\n        src={`https://image.tmdb.org/t/p/original${profile_path}`}\n        alt={name}\n      ></img>\n      <p>{name}</p>\n      <p>Character: {character}</p>\n    </li>\n  );\n};\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [data, setData] = useState([]);\n  const { isLoadingOn, isLoadingOff } = useLoad();\n\n  useEffect(() => {\n    const getMovies = async () => {\n      isLoadingOn();\n      const response = await getDataFromServer(movieId);\n      if (response) {\n        setData([...response.data.cast]);\n      }\n      isLoadingOff();\n    };\n    getMovies();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <ul>\n      {data.length > 0 ? (\n        data.map((element, index) => (\n          <CastItem\n            key={`id-` + index}\n            profile_path={element.profile_path}\n            name={element.name}\n            character={element.character}\n          />\n        ))\n      ) : (\n        <p>No data.</p>\n      )}\n    </ul>\n  );\n};\n\nasync function getDataFromServer(movieId) {\n  const header = { ...headerDefaultGet, ...headerSearchMovieCredits };\n  header.url = `${movieId}/credits`;\n  const parameters = {\n    ...paramsSearchMovieCredits,\n    api_key: apikeyTMDB,\n  };\n  try {\n    const response = await axiosData(header, parameters);\n    if (response.code === 'ERR_NETWORK') {\n      Notiflix.Notify.failure(`${response.message}`);\n    } else if (response.code === 'ERR_BAD_REQUEST') {\n      Notiflix.Notify.failure(`${response.response.data.status_message}`);\n    } else {\n      return response;\n    }\n  } catch (error) {\n    Notiflix.Notify.failure(`${error}`);\n    return error;\n  }\n}\n\nCastItem.propTypes = {\n  profile_path: PropTypes.string,\n  name: PropTypes.string,\n  character: PropTypes.string,\n};\n\nexport default Cast;\n","// import axios, { isCancel, AxiosError } from 'axios';\nimport axios from 'axios';\nexport async function axiosData(header, parameters) {\n  try {\n    const response = await axios(\n      {\n        ...header,\n        params: {\n          ...parameters,\n        },\n      },\n      { signal: AbortSignal.timeout(5000) }\n    );\n    return response;\n  } catch (error) {\n    return error;\n  }\n}\n","export const apikeyTMDB = '201a0d25c5ee0bd75c195a2bbfd9dec7';\n","export const headerDefaultGet = {\n  method: 'get',\n  accept: 'application/json',\n};\n\nexport const headerGenres = {\n  baseURL: 'https://api.themoviedb.org/3/genre/movie/list/',\n};\n\nexport const paramsGenres = {\n  language: 'en',\n};\n\nexport const headerTrailer = {\n  baseURL: 'https://api.themoviedb.org/3/movie',\n  url: '',\n};\n\nexport const paramsTrailer = {\n  language: 'en-US',\n};\n\nexport const headerTrendingMovies = {\n  baseURL: 'https://api.themoviedb.org/3/trending/movie/day',\n};\nexport const paramsTrendingMovies = {\n  language: 'en-US',\n};\n\nexport const headerSearchMovie = {\n  baseURL: 'https://api.themoviedb.org/3/search/movie',\n};\nexport const paramsSearchMovie = {\n  language: 'en-US',\n  include_adult: false,\n};\n\nexport const headerSearchMovieDetails = {\n  baseURL: 'https://api.themoviedb.org/3/movie',\n  url: '',\n};\n\nexport const paramsSearchMovieDetails = {\n  language: 'en-US',\n};\n\nexport const headerSearchMovieCredits = {\n  baseURL: 'https://api.themoviedb.org/3/movie/',\n  url: '',\n};\n\nexport const paramsSearchMovieCredits = {\n  language: 'en-US',\n};\nexport const headerSearchMovieReviews = {\n  baseURL: 'https://api.themoviedb.org/3/movie/',\n  url: '',\n};\n\nexport const paramsSearchMovieReviews = {\n  language: 'en-US',\n  page: 1,\n};\n"],"names":["CastItem","profile_path","name","character","className","css","src","alt","getDataFromServer","movieId","header","headerDefaultGet","headerSearchMovieCredits","url","parameters","paramsSearchMovieCredits","api_key","apikeyTMDB","axiosData","response","code","Notiflix","message","data","status_message","useParams","useState","setData","useLoad","isLoadingOn","isLoadingOff","useEffect","getMovies","cast","length","map","element","index","axios","params","signal","AbortSignal","timeout","method","accept","headerTrendingMovies","baseURL","paramsTrendingMovies","language","headerSearchMovie","paramsSearchMovie","include_adult","headerSearchMovieDetails","paramsSearchMovieDetails","headerSearchMovieReviews","paramsSearchMovieReviews","page"],"sourceRoot":""}